name: Lint, Test & Publish
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master
jobs:
  lint-and-test:
    strategy:
      matrix:
        go_version:
          - 1.11.13
          - 1.12.9
          - 1.13rc1

    name: lint-and-test (go ${{ matrix.go_version }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        id: go
        with:
          version: ${{ matrix.go_version }}
      - uses: actions/checkout@master
      - name: go-mod-download
        run: go mod download
        env:
          GOPROXY: https://proxy.golang.org

      - name: run-linter
        uses: docker://golangci/golangci-lint
        env:
          GOROOT: /usr/local/go
        with:
          entrypoint: golangci-lint
          args: run --enable-all -D errcheck -D lll -D dupl -D gochecknoglobals -D unparam --deadline 5m ./...

      - name: run-tests
        run: go test -race -vet all -mod readonly ./...

  build:
    name: build-and-publish
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v1
        id: go
        with:
          version: 1.13rc1

      - name: go-build
        run: go build -o fake-gcs-server -mod readonly
        env:
          CGO_ENABLED: 0
          GOPROXY: https://proxy.golang.org,https://gocenter.io,direct

      - name: sanity-check
        run: ./fake-gcs-server -h

      - name: docker-publish
        uses: docker://docker
        env:
          DOCKER_USERNAME: ${{ secrets.docker_username }}
          DOCKER_PASSWORD: ${{ secrets.docker_password }}
        with:
          entrypoint: sh
          args: ci/docker-build.sh
